C51 COMPILER V9.56.0.0   DS18B20                                                           01/21/2018 12:43:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\DS18B20.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE DS18B20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\D
                    -S18B20.lst) TABS(2) OBJECT(.\Objects\DS18B20.obj)

line level    source

   1          #include <regx52.h>
   2          #include <stdio.h>
   3          #include "..\..\LIBRARY\delay.h"
   4          #include "..\..\LIBRARY\port.h"
   5          
   6          void LCD_init(); //khoi tao
   7          void WriteCommand(unsigned char cmd); // Gui lenh cho LCD
   8          void WriteChar(char c); // Gui ky tu
   9          void WriteString(char *s); //GUI CHUOI
  10          
  11          void DS18B20_WriteBit(char c);
  12          void DS18B20_WriteByte(char c);
  13          char DS18B20_ReadBit(void);
  14          char DS18B20_ReadByte(void); 
  15          unsigned char DS18B20_Reset(void);
  16          void ReadTemperature(void);
  17          
  18          volatile unsigned int nguyen, thapphan;
  19          unsigned char Temp[6];
  20          
  21          main() {
  22   1          
  23   1          LCD_init();
  24   1          while (1) {
  25   2              WriteCommand(0x83);
  26   2              WriteString("DO NHIET DO");
  27   2              WriteCommand(0xC5);
  28   2              ReadTemperature();  
  29   2              thapphan = thapphan*100/16; // lay 2 chu so phan thap phan
  30   2              sprintf(Temp,"%d.%d", nguyen, thapphan); 
  31   2              WriteString(Temp);
  32   2              WriteChar(0xDF);
  33   2              WriteChar('C');
  34   2              delay_ms(2000);
  35   2              WriteCommand(0x01);
  36   2          } 
  37   1        
  38   1      }
  39          unsigned char DS18B20_Reset(void) {
  40   1          unsigned char presence;
  41   1          DQ = 1;
  42   1          DQ = 0; // keo xuong
  43   1          delay_us(29); // delay (480-24)/16=28.5 do thoi gian goi ham 24us, ham nay tre trong 16us
  44   1          DQ = 1; // keo len
  45   1          delay_us(3); // delay (70-24)/16 = 2.875 // cho tin hieu presence
  46   1          presence = DQ;
  47   1          delay(25); // delay (410-24)/16 = 24.125; // ket thuc timeslot
  48   1          return presence; // Neu presence = 0 thi OK chip slave tra loi, =1 thi NOT OK;
  49   1      }
  50          void DS18B20_WriteBit(char c) {
  51   1          DQ = 0; // keo xuong muc 0 de khoi dong timeslot
  52   1          if (c == 1) DQ = 1; // Neu write 1
  53   1          delay_us(5); 
  54   1          DQ = 1;
C51 COMPILER V9.56.0.0   DS18B20                                                           01/21/2018 12:43:45 PAGE 2   

  55   1      }
  56          void DS18B20_WriteByte(char c) {
  57   1          unsigned char i;
  58   1          unsigned char temp;
  59   1          for (i = 0; i < 8; i++) {
  60   2              temp = c >> i; // lan luot viet tung bit
  61   2              temp &= 0x01; // luu bit thap nhat vao bien temp
  62   2              DS18B20_WriteBit(temp); // viet bit do len bus
  63   2          }
  64   1          delay_us(5);
  65   1      }
  66          char DS18B20_ReadBit(void) {
  67   1          unsigned char i;
  68   1          DQ = 0;
  69   1          DQ = 1;
  70   1          for (i = 0; i < 3; i++); // delay 15us
  71   1          return (DQ);
  72   1      }
  73          char DS18B20_ReadByte(void) {
  74   1          unsigned char i;
  75   1          char value = 0;
  76   1          for (i = 0; i < 8; i++) {
  77   2              if (DS18B20_ReadBit()) value|=0x01<<i; // dich trai doc lan luot tung bit
  78   2              delay_us(5);
  79   2          }
  80   1          return value;
  81   1      }
  82          void ReadTemperature(void) {
  83   1          unsigned char a = 0;
  84   1          unsigned char b = 0;
  85   1          if (!DS18B20_Reset()) {
  86   2              DS18B20_WriteByte(0xCC);// Skip rom
  87   2              DS18B20_WriteByte(0x4E); // Write rom
  88   2              DS18B20_WriteByte(0x1F); // 9bit mode
  89   2              delay_us(5);
  90   2          }
  91   1          if (!DS18B20_Reset()) {
  92   2              DS18B20_WriteByte(0xCC);// Skip rom
  93   2              DS18B20_WriteByte(0x44); // Convert T
  94   2              delay_us(5);
  95   2          }
  96   1          if (!DS18B20_Reset()) {
  97   2              DS18B20_WriteByte(0xCC);// Skip rom
  98   2              DS18B20_WriteByte(0xBE); // Lenh doc nhiet do
  99   2              delay_us(3);
 100   2          }
 101   1          a = DS18B20_ReadByte(); // doc nhiet do byte thap
 102   1          b = DS18B20_ReadByte(); // doc nhiet do byte cao
 103   1          nguyen = (b*256+a)>>4; // phan nguyen
 104   1          thapphan = (b*256+a)&0x000F; // 4 bit thap nhat chua phan thap phan
 105   1      }
 106          void WriteCommand(unsigned char cmd) {
 107   1          P2 = (cmd & 0xF0); // gui 4 bit cao truoc
 108   1          RS = 0; // Gui/nhan lenh
 109   1          RW = 0; // Gui
 110   1          EN = 1; delay(20); EN = 0;
 111   1          delay(150);
 112   1          P2 = ((cmd << 4) & 0xF0); // gui 4 bit thap
 113   1          RS = 0; RW = 0;
 114   1          EN = 1; delay(20); EN = 0;
 115   1          delay(150);
 116   1      }
C51 COMPILER V9.56.0.0   DS18B20                                                           01/21/2018 12:43:45 PAGE 3   

 117          
 118          void LCD_init() {
 119   1          P2 = 0x00;
 120   1          delay_ms(1);
 121   1          WriteCommand(0x03);
 122   1          WriteCommand(0x02);        // Initialize Lcd in 4-bit mode
 123   1          WriteCommand(0x28);        
 124   1          WriteCommand(0x01);        // Clear 
 125   1          WriteCommand(0x0C);
 126   1      }
 127              
 128          void WriteChar(char c) {
 129   1          P2 = (c & 0xF0);
 130   1          RS = 1; // Gui/nhan du lieu
 131   1          RW = 0; // Gui
 132   1          EN = 1; delay(10); EN = 0;
 133   1          delay(100);
 134   1          P2 = ((c << 4) & 0xF0);
 135   1          RS = 1; RW = 0;
 136   1          EN = 1; delay(10); EN = 0;
 137   1          delay(100);
 138   1      }
 139          void WriteString(char *s) {
 140   1          while (*s) {
 141   2              WriteChar(*s++);
 142   2          }
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    586    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
