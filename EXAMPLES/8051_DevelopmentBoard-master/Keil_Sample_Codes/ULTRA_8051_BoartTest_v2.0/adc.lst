C51 COMPILER V9.02   ADC                                                                   11/21/2016 11:18:05 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\adc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\00-libfiles\adc.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\00-libfiles) DEB
                    -UG OBJECTEXTEND PRINT(.\adc.lst) TABS(2) OBJECT(.\adc.obj)

line level    source

   1          /***************************************************************************************************
   2                                              ExploreEmbedded Copyright Notice    
   3          ****************************************************************************************************
   4           * File:   adc.c
   5           * Version: 15.0
   6           * Author: ExploreEmbedded
   7           * Website: http://www.exploreembedded.com/wiki
   8           * Description: Contains the library function for ADC conversion
   9           
  10          This code has been developed and tested on ExploreEmbedded boards.  
  11          We strongly believe that the library works on any of development boards for respective controllers. 
  12          Check this link http://www.exploreembedded.com/wiki for awesome tutorials on 8051,PIC,AVR,ARM,Robotics,RTO
             -S,IOT.
  13          ExploreEmbedded invests substantial time and effort developing open source HW and SW tools, to support con
             -sider buying the ExploreEmbedded boards.
  14           
  15          The ExploreEmbedded libraries and examples are licensed under the terms of the new-bsd license(two-clause 
             -bsd license).
  16          See also: http://www.opensource.org/licenses/bsd-license.php
  17          
  18          EXPLOREEMBEDDED DISCLAIMS ANY KIND OF HARDWARE FAILURE RESULTING OUT OF USAGE OF LIBRARIES, DIRECTLY OR
  19          INDIRECTLY. FILES MAY BE SUBJECT TO CHANGE WITHOUT PRIOR NOTICE. THE REVISION HISTORY CONTAINS THE INFORMA
             -TION 
  20          RELATED TO UPDATES.
  21           
  22          
  23          Permission to use, copy, modify, and distribute this software and its documentation for any purpose
  24          and without fee is hereby granted, provided that this copyright notices appear in all copies 
  25          and that both those copyright notices and this permission notice appear in supporting documentation.
  26          ***************************************************************************************************/
  27           
  28           
  29           
  30          /***************************************************************************************************
  31                                       Revision History
  32          ****************************************************************************************************      
             -             
  33          15.0: Initial version 
  34          ***************************************************************************************************/
  35          
  36          #include"adc.h"
  37          #include"delay.h"
  38          #include"stdutils.h"
  39          
  40          
  41          
  42          
  43          
  44          /***************************************************************************************************
  45                                   void ADC_Init()
  46          ****************************************************************************************************
  47           * I/P Arguments: none.
  48           * Return value    : none
  49          
C51 COMPILER V9.02   ADC                                                                   11/21/2016 11:18:05 PAGE 2   

  50           * description :This function initializes the ADC module.
  51          ***************************************************************************************************/
  52          void ADC_Init()
  53          {
  54   1      
  55   1               adc_Start=0;                //Initialize all the control lines to zero.
  56   1               adc_ALE=0;
  57   1               adc_OE=0;
  58   1               adc_EOC=1;                  //Configure the EOC pin as I/P
  59   1             adc_databus=0xff;             //configure adc_databus as input
  60   1      }
  61          
  62          
  63          
  64          
  65          /***************************************************************************************************
  66                              uint16_t ADC_GetAdcValue(uint8_t var_adcChannel_u8);
  67          ****************************************************************************************************
  68           * I/P Arguments: uint8_t(channel number).
  69           * Return value    : uint16_t(16 bit ADC result)
  70          
  71           * description  :This function does the ADC conversion for the Selected Channel
  72                           and returns the converted 16bit result.
  73                           The adc value per bit depends on the resolution of the ADC. 
  74                           For ADC0809(8-bit ADC)) the adc value per lsb will be 5/255=0.0196V.
  75                           For AVR/PIC(10-bit adc) the adc value per lsb will be 5/1023=0048v
  76          
  77                        ___     ___     ___     ___     ___     ___     ___     ___     ___
  78                   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
  79          Clock:   |___|   |___|   |___|   |___|   |___|   |___|   |___|   |___|   |___|   |__
  80          
  81          Address  ----------(Address A,B,C)--------------------------------------------------
  82          (Channel number)                    ______
  83                                             |      |
  84          ALE:     __________________________|      |_________________________________________
  85                                                 _______
  86                                                |       |
  87          Start;   _____________________________|       |_____________________________________
  88                   __________________________________________          ______________________
  89                                                             |        |
  90          EOC:                                               |________|
  91                                                                           _______________
  92                                                                          |               |
  93          OE;     ________________________________________________________|               |____
  94          
  95          Data:   -----------------------------------------------------------(adc result)-----
  96          
  97          ***************************************************************************************************/
  98          uint16_t ADC_GetAdcValue(uint8_t v_adcChannel_u8)
  99          {
 100   1              uint16_t adc_result;
 101   1      
 102   1              adc_A=((v_adcChannel_u8>>0) & 0x01);   //Selectthe channel
 103   1              adc_B=((v_adcChannel_u8>>1) & 0x01);   //for which the conversion needs to be done
 104   1              adc_C=((v_adcChannel_u8>>2) & 0x01);
 105   1      
 106   1              adc_ALE=1;         // Latch the address by making the ALE high.
 107   1              DELAY_us(50);
 108   1              adc_Start=1;       //Start the conversion after latching the channel address
 109   1              DELAY_us(25);
 110   1      
 111   1              adc_ALE=0;         //Pull ALE line to zero after starting the conversion.
C51 COMPILER V9.02   ADC                                                                   11/21/2016 11:18:05 PAGE 3   

 112   1              DELAY_us(50);
 113   1              adc_Start=0;       //Pull Start line to zero after starting the conversion.
 114   1      
 115   1           while(adc_EOC==0);    // Wait till the ADC conversion is completed,
 116   1                                 // EOC will be pulled to HIGH by the hardware(ADC0809)
 117   1                                 // once conversion is completed.
 118   1      
 119   1               adc_OE=1;         //Make the Output Enable high
 120   1                                 //to bring the ADC data to port pins
 121   1               DELAY_us(25);
 122   1           adc_result=adc_databus;  //Read the ADC data from ADC bus
 123   1                adc_OE=0;           //After reading the data, disable th ADC output line.
 124   1      
 125   1            return(adc_result) ;
 126   1      
 127   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     78    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
