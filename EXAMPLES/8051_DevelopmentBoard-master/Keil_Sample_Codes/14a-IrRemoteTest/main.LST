C51 COMPILER V9.02   MAIN                                                                  08/11/2016 11:35:41 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c BROWSE INCDIR(..\00-libfiles) DEBUG OBJECTEXTEND

line level    source

   1          /***************************************************************************************************
   2                                              ExploreEmbedded Copyright Notice 
   3          ****************************************************************************************************
   4           * File:   necIrRemoteExample1.c
   5           * Version: 16.0
   6           * Author: ExploreEmbedded
   7           * Website: http://www.exploreembedded.com/wiki
   8           * Description: Sample program to decode NEC IR Remote pulses and display on LCD using 8051 controller.
   9          This code has been developed and tested on ExploreEmbedded boards.  
  10          We strongly believe that the library works on any of development boards for respective controllers. 
  11          Check this link http://www.exploreembedded.com/wiki for awesome tutorials on 8051,PIC,AVR,ARM,Robotics,RTO
             -S,IOT.
  12          ExploreEmbedded invests substantial time and effort developing open source HW and SW tools, to support con
             -sider 
  13          buying the ExploreEmbedded boards.
  14           
  15          The ExploreEmbedded libraries and examples are licensed under the terms of the new-bsd license(two-clause 
             -bsd license).
  16          See also: http://www.opensource.org/licenses/bsd-license.php
  17          EXPLOREEMBEDDED DISCLAIMS ANY KIND OF HARDWARE FAILURE RESULTING OUT OF USAGE OF LIBRARIES, DIRECTLY OR
  18          INDIRECTLY. FILES MAY BE SUBJECT TO CHANGE WITHOUT PRIOR NOTICE. THE REVISION HISTORY CONTAINS THE INFORMA
             -TION 
  19          RELATED TO UPDATES.
  20           
  21          Permission to use, copy, modify, and distribute this software and its documentation for any purpose
  22          and without fee is hereby granted, provided that this copyright notices appear in all copies 
  23          and that both those copyright notices and this permission notice appear in supporting documentation.
  24          **************************************************************************************************/
  25          
  26          /*************************
  27            NEC IR Remote Codes 
  28          **************************  
  29          0xFFA25D: CH-       
  30          0xFF629D: CH        
  31          0xFFE21D: CH+       
  32          0xFF22DD: PREV      
  33          0xFF02FD: NEXT      
  34          0xFFC23D: PLAY/PAUSE
  35          0xFFE01F: VOL-      
  36          0xFFA857: VOL+      
  37          0xFF906F: EQ        
  38          0xFF6897: 0         
  39          0xFF9867: 100+      
  40          0xFFB04F: 200+      
  41          0xFF30CF: 1         
  42          0xFF18E7: 2         
  43          0xFF7A85: 3         
  44          0xFF10EF: 4         
  45          0xFF38C7: 5         
  46          0xFF5AA5: 6         
  47          0xFF42BD: 7         
  48          0xFF4AB5: 8         
  49          0xFF52AD: 9 
  50          **************************/
  51          
C51 COMPILER V9.02   MAIN                                                                  08/11/2016 11:35:41 PAGE 2   

  52          #include <reg51.h>
  53          #include "lcd.h"
  54          #include "stdutils.h"
  55          
  56          uint32_t bitPattern=0,newKey=0;
  57          uint8_t timerValue;
  58          uint8_t msCount=0;
  59          char pulseCount=0;
  60          
  61          
  62          void timer0_isr() interrupt 1
  63          {
  64   1          if(msCount<50)
  65   1              msCount++;
  66   1      
  67   1          TH0 = 0xFC;   // Reload the timer value for 1ms Delay
  68   1          TL0 = 0x67;
  69   1      }
  70          
  71          
  72          
  73          void externalIntr0_ISR()  interrupt 0
  74          {
  75   1          timerValue = msCount;
  76   1          msCount = 0;
  77   1      
  78   1          TH0 = 0xFC;  // Reload the timer value for 1ms Delay
  79   1          TL0 = 0x67;
  80   1      
  81   1          pulseCount++;
  82   1      
  83   1          if((timerValue>=50)) // If the pulse width is greater than 50ms, this will mark the SOF
  84   1          { 
  85   2              pulseCount = -2; // First 2 counts needs to be skipped hence pulse count is set to -2 
  86   2              bitPattern = 0;
  87   2          }
  88   1          else if((pulseCount>=0) && (pulseCount<32)) //Accumulate the bit values between 0-31.
  89   1          {  
  90   2              if(timerValue>=2)                      //pulse width greater than 2ms is considered as LOGIC1
  91   2              {
  92   3                  bitPattern |=(uint32_t)1<<(31-pulseCount);
  93   3              }
  94   2              else
  95   2              {
  96   3      
  97   3              }
  98   2          }
  99   1          else if(pulseCount>=32)                  //This will mark the End of frame as 32 pulses are received
 100   1          {
 101   2              newKey = bitPattern;                // Copy the newKey(patter) and set the pulse count to 0;
 102   2              pulseCount = 0;
 103   2          }
 104   1      }
 105          
 106          
 107          void main()
 108          {
 109   1      
 110   1          /*Connect RS->P0.0, RW->P0.1, EN->P0.2 and data bus to P0.4 to P0.7*/
 111   1          LCD_SetUp(P0_0,P0_1,P0_2,P_NC,P_NC,P_NC,P_NC,P0_4,P0_5,P0_6,P0_7);
 112   1          LCD_Init(2,16);
 113   1      
C51 COMPILER V9.02   MAIN                                                                  08/11/2016 11:35:41 PAGE 3   

 114   1          TMOD |= 0x01; // Timer0 MODE1(16-bit timer)
 115   1          TH0 = 0xFC;   //Timer value for 1ms at 11.0592Mhz clock
 116   1          TL0 = 0x67;
 117   1          TR0 = 1;       // Start the Timer
 118   1          ET0 = 1;       // Enable the Timer0 Interrupt
 119   1          
 120   1          IT0 = 1;       // Configure INT0 falling edge interrupt
 121   1          EX0 = 1;       // Enable the INT0 External Interrupt
 122   1          
 123   1          EA  = 1;       // Enable the Global Interrupt bit
 124   1      
 125   1          LCD_DisplayString("Init Done");
 126   1          while(1)
 127   1          {
 128   2              if(newKey!=0)            //Wait till newKey press is detected
 129   2              {  
 130   3                  LCD_Clear();         //Clear the LCD and Display the new Key Code
 131   3                  LCD_Printf("newKey:%X",newKey);
 132   3                  newKey = 0;          //CLear the newKey value for next cycle
 133   3              }
 134   2          }           
 135   1      }         


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    305    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
