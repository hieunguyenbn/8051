C51 COMPILER V9.52.0.0   LCD1602                                                           09/12/2014 11:04:44 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN lcd1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd1602\lcd1602.c BROWSE DEBUG OBJECTEXTEND PRINT(.\lcd1602.lst) TABS(2)
                    - OBJECT(lcd1602.obj)

line level    source

   1            
   2          #include <main.h>
   3          
   4          // Ham Khoi Tao LCD
   5           void lcd1602_enable(void)
   6          {
   7   1        LCD_E=1;  
   8   1        delay_us(3);    
   9   1        LCD_E=0;
  10   1        delay_us(5);  
  11   1      }
  12          // --------------------------------------------------
  13          // Ham Gui 4 Bit Du Lieu Ra LCD
  14           void lcd1602_send_4bit_data ( unsigned char cX )
  15          {
  16   1       LCD_D4 = cX & 0x01; 
  17   1       LCD_D5 = (cX>>1)&1;
  18   1       LCD_D6 = (cX>>2)&1;
  19   1       LCD_D7 = (cX>>3)&1;
  20   1      }
  21          
  22          // --------------------------------------------------
  23          // Ham Gui 1 Lenh Cho LCD
  24           void lcd1602_send_command (unsigned char cX )
  25          {
  26   1        lcd1602_send_4bit_data  ( cX >>4 );     // send 4 bit high  
  27   1        lcd1602_enable() ;
  28   1        lcd1602_send_4bit_data ( cX  );         // send 4 bit low  
  29   1        lcd1602_enable() ;
  30   1      }
  31          
  32          // --------------------------------------------------
  33          // Ham Khoi Tao LCD
  34           void lcd1602_init ( void )
  35          {
  36   1        lcd1602_send_4bit_data ( 0x00 );
  37   1        delay_ms(200);
  38   1        
  39   1        LCD_RS=0; 
  40   1        LCD_RW=0;
  41   1        LCD_E=0;                                  // che do gui lenh
  42   1        
  43   1        lcd1602_send_4bit_data ( 0x03 );          // ket noi 8 bit
  44   1        lcd1602_enable() ;
  45   1        lcd1602_enable () ;
  46   1        lcd1602_enable () ;
  47   1        lcd1602_send_4bit_data ( 0x02 );          // ket noi 4 bit
  48   1        lcd1602_enable() ;
  49   1        
  50   1        lcd1602_send_command( 0x2C );             // giao thuc 4 bit, hien thi 2 hang, ki tu 5x8
  51   1        lcd1602_send_command( 0x80);
  52   1        lcd1602_send_command( 0x0C);              // cho phep hien thi man hinh
  53   1        lcd1602_send_command( 0x06 );             // tang ID, khong dich khung hinh
  54   1        lcd1602_send_command( CLEAR_LCD );        // xoa toan bo khung hinh
C51 COMPILER V9.52.0.0   LCD1602                                                           09/12/2014 11:04:44 PAGE 2   

  55   1      }
  56          
  57          // --------------------------------------------------
  58          // Ham Thiet Lap Vi Tri Con Tro
  59          void lcd1602_gotoxy(unsigned char x, unsigned char y)
  60          {
  61   1        unsigned char address;
  62   1        if(!y)
  63   1        address = (LINE_1+x);
  64   1        else
  65   1        address = (LINE_2+x);
  66   1        delay_ms(3);
  67   1        lcd1602_send_command(address);
  68   1        delay_ms(1);
  69   1      }
  70          
  71          // --------------------------------------------------
  72          // Ham Xoa Man Hinh LCD
  73          void lcd1602_clear(void)
  74          {
  75   1        lcd1602_send_command( CLEAR_LCD );  
  76   1        //delay_us(300);
  77   1      }
  78          
  79          // --------------------------------------------------
  80          // Ham Gui 1 Ky Tu Len LCD
  81           void lcd1602_putchar ( unsigned int cX )
  82          {
  83   1        LCD_RS=1; 
  84   1        lcd1602_send_command( cX );
  85   1        LCD_RS=0;
  86   1      }
  87          
  88          // --------------------------------------------------
  89          // Ham Gui 1 Chuoi Ky Tu Len LCD
  90          void lcd1602_puts(char *s)
  91          {
  92   1         while (*s)
  93   1         {
  94   2            lcd1602_putchar(*s);
  95   2            s++;
  96   2         }
  97   1      }
  98          
  99          
 100          
 101          
 102          
 103          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    216    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
