C51 COMPILER V9.56.0.0   LCD_4                                                             12/13/2017 21:42:51 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD_4
OBJECT MODULE PLACED IN .\Objects\LCD_4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD_4.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD
                    -_4.lst) TABS(2) OBJECT(.\Objects\LCD_4.obj)

line level    source

   1          // INTERFACING LCD 4 BIT MODE
   2          #include <reg52.h>
   3          #include <string.h>
   4          #include "..\..\LIBRARY\delay.h"
   5          
   6          sbit RS = P2^0;
   7          sbit RW = P2^1;
   8          sbit EN = P2^2;
   9          
  10          void LCD_init(); //khoi tao
  11          void WriteCommand(unsigned char cmd); // Gui lenh cho LCD
  12          void WriteChar(char c); // Gui ky tu
  13          void WriteString(char *s);
  14          void ShiftLeft(char *s, char *s2);
  15          void delay(unsigned int t) {
  16   1          while(t--);
  17   1      }
  18          
  19          char chuoi1[] = "MANCHESTER UNITED";
  20          char chuoi2[] = "OLD TRAFFORD";
  21          
  22          int main() {
  23   1          LCD_init();
  24   1          WriteCommand(0xC2);
  25   1          WriteString(chuoi2);
  26   1          ShiftLeft(chuoi1,chuoi2);
  27   1        
  28   1          return 0;
  29   1      }
  30          
  31          void WriteCommand(unsigned char cmd) {
  32   1          P2 = (cmd & 0xF0); // gui 4 bit cao truoc
  33   1          RS = 0; // Gui/nhan lenh
  34   1          RW = 0; // Gui
  35   1          EN = 1; delay(20); EN = 0;
  36   1          delay(150);
  37   1          P2 = ((cmd << 4) & 0xF0); // gui 4 bit thap
  38   1          RS = 0; RW = 0;
  39   1          EN = 1; delay(20); EN = 0;
  40   1          delay(150);
  41   1      }
  42          
  43          void LCD_init() {
  44   1          P2 = 0x00;
  45   1          delay_ms(1);
  46   1          WriteCommand(0x03);
  47   1          WriteCommand(0x02);        // Initialize Lcd in 4-bit mode
  48   1          WriteCommand(0x28);        // enable 5x7 mode for chars 
  49   1          WriteCommand(0x01);        // Clear Display
  50   1          WriteCommand(0x0C);
  51   1      }
  52              
  53          void WriteChar(char c) {
  54   1          P2 = (c & 0xF0);
C51 COMPILER V9.56.0.0   LCD_4                                                             12/13/2017 21:42:51 PAGE 2   

  55   1          RS = 1; // Gui/nhan du lieu
  56   1          RW = 0; // Gui
  57   1          EN = 1; delay(10); EN = 0;
  58   1          delay(100);
  59   1          P2 = ((c << 4) & 0xF0);
  60   1          RS = 1; RW = 0;
  61   1          EN = 1; delay(10); EN = 0;
  62   1          delay(100);
  63   1      }
  64          void WriteString(char *s) {
  65   1          while (*s) {
  66   2              WriteChar(*s++);
  67   2          }
  68   1      }
  69          void ShiftLeft(char *s, char *s2) {
  70   1          unsigned char j, i, c, n;
  71   1          n = strlen(s)-1; j = 0; c = 15;
  72   1          while (c) {
  73   2              WriteCommand(0x80+c);
  74   2              for (i = 0; i <= j; i++) {
  75   3                WriteChar(s[i]);
  76   3              }
  77   2              WriteCommand(0xC2);
  78   2              WriteString(s2);
  79   2              delay_ms(400);
  80   2              WriteCommand(0x01);
  81   2              WriteCommand(0xC2);
  82   2              WriteString(s2);
  83   2              c--; j++;
  84   2          }
  85   1          while (c <= n) {
  86   2              WriteCommand(0x80);
  87   2              for (i = c; i <= n; i++) {
  88   3                  WriteChar(s[i]);//in tu ky tu thu i den ky tu thu n
  89   3              }
  90   2              WriteCommand(0xC2);
  91   2              WriteString(s2);
  92   2              delay_ms(400);
  93   2              WriteCommand(0x01);
  94   2              WriteCommand(0xC2);
  95   2              WriteString(s2);
  96   2              c++;
  97   2          }
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     31      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
